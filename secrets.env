LOGIN_QUERY=SELECT username, password, user_id FROM users WHERE username = ?;

GROUPCODE_QUERY=SELECT CAST(g.group_code AS TEXT), u.username FROM link_users AS lu_self JOIN groups AS g ON g.group_id = lu_self.group_id LEFT JOIN link_users AS lu_other ON lu_other.group_id = lu_self.group_id AND lu_other.user_id <> lu_self.user_id LEFT JOIN users AS u ON u.user_id = lu_other.user_id WHERE lu_self.user_id = ? ORDER BY g.group_code, u.username;

UPDATE_FAILED_LOGINS=UPDATE failed_logins SET attempts = attempts + 1, last_attempt = ? WHERE ip = ?;

FIRST_FAILED_LOGIN=INSERT INTO failed_logins (ip, attempts, last_attempt) VALUES (?, ?, ?);

CHECK_FAILED_LOGINS=SELECT attempts, last_attempt FROM failed_logins WHERE ip = ? ORDER BY last_attempt DESC LIMIT 1;

SAVE_SESSION_TOKEN=UPDATE users SET session_token = ?, session_expiration = ?, last_login = ? WHERE user_id = ?;

FIND_SESSION_TOKEN=SELECT session_expiration, username, session_token FROM users WHERE user_id = ?;

FIND_CODE=SELECT recovery_token FROM users WHERE username = ?;

SET_CODE=UPDATE users SET password = ? WHERE username = ?;

COUNT_USER_GROUPS=SELECT COUNT(*) FROM link_users WHERE user_id = ?;

CHECK_GROUP_EXISTS=SELECT group_id FROM groups WHERE group_code = ?;

ADD_TO_GROUP=INSERT INTO link_users (user_id, group_id) SELECT ?, group_id FROM groups WHERE group_code = ?;

MATCHED_NAMES_QUERY=WITH user_group AS ( SELECT g.group_id FROM groups g JOIN link_users lu ON g.group_id = lu.group_id WHERE lu.user_id = ? AND g.group_code = ? ), partner_ids AS ( SELECT user_id FROM link_users WHERE group_id = (SELECT group_id FROM user_group) AND user_id != ? ), partner_liked_names AS ( SELECT DISTINCT ul.name_id FROM user_liked ul JOIN partner_ids p ON ul.user_id = p.user_id ), user_own_names AS ( SELECT name_id FROM user_liked WHERE user_id = ? UNION SELECT name_id FROM user_disliked WHERE user_id = ? ) SELECT n.id, n.name, n.gender, GROUP_CONCAT(DISTINCT c.country) AS countries, GROUP_CONCAT(DISTINCT p.pop) AS populations FROM names n JOIN partner_liked_names pl ON n.id = pl.name_id LEFT JOIN population p ON n.id = p.name_id LEFT JOIN countries c ON p.country_id = c.id WHERE n.id NOT IN (SELECT name_id FROM user_own_names) GROUP BY n.id, n.name, n.gender;

CHECK_IF_IN_GROUP=SELECT user_id FROM link_users JOIN groups ON link_users.group_id = groups.group_id WHERE group_code = ?;

COUNT_USERS_IN_GROUP=SELECT COUNT(*) FROM link_users WHERE group_id = ( SELECT group_id FROM groups WHERE group_code = ? );

DELETE_LINK_GROUPS=DELETE FROM link_users WHERE group_id IN ( SELECT group_id FROM groups WHERE group_code = ? );

DELETE_GROUP=DELETE FROM groups WHERE group_code = ?;

DELETE_2LINKS_GROUPS=DELETE FROM link_users WHERE group_id = ( SELECT group_id FROM groups WHERE group_code = ? ) AND user_id = ?;

SELECT_GROUPS=SELECT lu.group_id FROM link_users lu WHERE lu.group_id IN ( SELECT group_id FROM link_users WHERE user_id = ? );

CHECK_GROUPS_WITHOUT_USERS=SELECT g.group_id FROM groups g LEFT JOIN link_users lu ON g.group_id = lu.group_id WHERE lu.user_id IS NULL

DISLIKE_LIST=SELECT names.id, names.name, names.gender, countries.country, population.pop FROM user_disliked JOIN names ON user_disliked.name_id = names.id JOIN population ON names.id = population.name_id JOIN countries ON population.country_id = countries.id WHERE user_disliked.user_id = ?;

LIKE_LIST=SELECT names.id, names.name, names.gender, countries.country, population.pop FROM user_liked JOIN names ON user_liked.name_id = names.id JOIN population ON names.id = population.name_id JOIN countries ON population.country_id = countries.id WHERE user_liked.user_id = ?;

GROUP_LIKED_NAMES=WITH UserGroups AS ( SELECT group_id FROM link_users WHERE user_id = ? ), GroupUsers AS ( SELECT g.group_id, lu.user_id FROM link_users lu JOIN UserGroups g ON lu.group_id = g.group_id ), GroupUserLikes AS ( SELECT gu.group_id, gu.user_id, ul.name_id FROM GroupUsers gu JOIN user_liked ul ON gu.user_id = ul.user_id ), GroupCommonLikes AS ( SELECT gul.group_id, gul.name_id, COUNT(DISTINCT gul.user_id) AS user_count, (SELECT COUNT(DISTINCT user_id) FROM GroupUsers gu WHERE gu.group_id = gul.group_id) AS group_user_count FROM GroupUserLikes gul GROUP BY gul.group_id, gul.name_id HAVING user_count = group_user_count ) SELECT g.group_code, n.id AS name_id, n.name AS name FROM GroupCommonLikes gcl JOIN names n ON gcl.name_id = n.id JOIN groups g ON gcl.group_id = g.group_id WHERE (SELECT COUNT(*) FROM GroupUsers gu WHERE gu.group_id = gcl.group_id) > 1 ORDER BY g.group_code, n.name;

RESET_SESSIONTOKEN=UPDATE users SET session_token = NULL, session_expiration = NULL WHERE user_id = ?;

CHECK_GROUPCODE_EXISTS=SELECT 1 FROM groups WHERE group_code = ?;

INSERT_GROUPCODE=INSERT INTO groups (group_code) VALUES (?) RETURNING group_id;

INSERT_GROUP_LINK=INSERT INTO link_users (user_id, group_id) VALUES (?, ?);

INSERT_NEW_USER=INSERT INTO users (username, password, session_token, session_expiration, recovery_token, last_login) VALUES (?, ?, ?, ?, ?, ?);

FIND_SIMILAR_NAMES=WITH group_members AS (SELECT DISTINCT s.name_id FROM similar s WHERE s.group_id = (SELECT s2.group_id FROM similar s2 WHERE s2.name_id = ?) AND s.name_id != ?) SELECT n.id, n.name, n.gender, GROUP_CONCAT(c.country, ', ') AS countries, GROUP_CONCAT(p.pop, ', ') AS populations FROM names n JOIN population p ON n.id = p.name_id JOIN countries c ON p.country_id = c.id WHERE n.id IN (SELECT name_id FROM group_members) GROUP BY n.id, n.name, n.gender;

LOGIN_FIND_SIMILAR_NAMES=WITH group_members AS (SELECT DISTINCT s.name_id FROM similar s WHERE s.group_id = (SELECT s2.group_id FROM similar s2 WHERE s2.name_id = ?) AND s.name_id != ?) SELECT n.id, n.name, n.gender, GROUP_CONCAT(c.country, ', ') AS countries, GROUP_CONCAT(p.pop, ', ') AS populations FROM names n JOIN population p ON n.id = p.name_id JOIN countries c ON p.country_id = c.id WHERE n.id IN (SELECT name_id FROM group_members) AND n.id NOT IN (SELECT name_id FROM user_liked WHERE user_id = ?) AND n.id NOT IN (SELECT name_id FROM user_disliked WHERE user_id = ?) GROUP BY n.id, n.name, n.gender;

UNDISLIKE_QUERY=DELETE FROM user_disliked WHERE user_id = ? AND name_id IN ({placeholders});

UNLIKE_QUERY=DELETE FROM user_liked WHERE user_id = ? AND name_id IN ({placeholders});

FIND_DISLIKED=SELECT name_id FROM user_disliked WHERE user_id = ? AND name_id IN ({placeholders})

INSERT_LIKED_NAMES=INSERT OR IGNORE INTO user_liked (name_id, user_id) VALUES (?, ?);

FIND_LIKED=SELECT name_id FROM user_liked WHERE user_id = ? AND name_id IN ({placeholders})

INSERT_DISLIKED_NAMES=INSERT OR IGNORE INTO user_disliked (name_id, user_id) VALUES (?, ?);

DELETE_LINK_USER="DELETE FROM link_users WHERE group_id = ? AND user_id = ?"

DELETE_USER_LIKED="DELETE FROM user_liked WHERE user_id = ?"

DELETE_USER_DISLIKED="DELETE FROM user_disliked WHERE user_id = ?"

DELETE_USER="DELETE FROM users WHERE user_id = ?"
